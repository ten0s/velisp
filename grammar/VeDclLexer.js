// Generated from grammar/VeDcl.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,40,510,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,
6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,
11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,
1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,
19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,
1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,
24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,
29,1,29,1,29,1,29,1,29,1,29,3,29,349,8,29,1,30,3,30,352,8,30,1,30,4,30,355,
8,30,11,30,12,30,356,1,31,3,31,360,8,31,1,31,4,31,363,8,31,11,31,12,31,364,
1,31,1,31,4,31,369,8,31,11,31,12,31,370,1,32,1,32,5,32,375,8,32,10,32,12,
32,378,9,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,
1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,414,8,33,1,34,1,34,1,34,1,34,
1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,
34,434,8,34,1,35,4,35,437,8,35,11,35,12,35,438,1,35,1,35,1,35,5,35,444,8,
35,10,35,12,35,447,9,35,1,36,1,36,1,36,1,36,5,36,453,8,36,10,36,12,36,456,
9,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,4,37,465,8,37,11,37,12,37,466,1,
37,5,37,470,8,37,10,37,12,37,473,9,37,1,37,1,37,1,37,1,37,1,38,3,38,480,
8,38,1,38,1,38,1,38,1,38,1,39,4,39,487,8,39,11,39,12,39,488,1,39,1,39,1,
40,1,40,1,40,1,40,3,40,497,8,40,1,41,1,41,1,42,1,42,3,42,503,8,42,1,43,1,
43,1,44,1,44,1,45,1,45,2,454,471,0,46,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,0,83,0,85,0,87,0,89,0,91,
0,1,0,6,2,0,9,9,32,32,4,0,10,10,13,13,34,34,92,92,6,0,34,34,92,92,101,101,
110,110,114,114,116,116,1,0,97,122,1,0,65,90,1,0,48,57,528,0,1,1,0,0,0,0,
3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,1,93,1,
0,0,0,3,102,1,0,0,0,5,104,1,0,0,0,7,106,1,0,0,0,9,108,1,0,0,0,11,110,1,0,
0,0,13,117,1,0,0,0,15,121,1,0,0,0,17,128,1,0,0,0,19,138,1,0,0,0,21,151,1,
0,0,0,23,165,1,0,0,0,25,175,1,0,0,0,27,185,1,0,0,0,29,198,1,0,0,0,31,214,
1,0,0,0,33,233,1,0,0,0,35,240,1,0,0,0,37,249,1,0,0,0,39,255,1,0,0,0,41,268,
1,0,0,0,43,277,1,0,0,0,45,288,1,0,0,0,47,301,1,0,0,0,49,308,1,0,0,0,51,315,
1,0,0,0,53,320,1,0,0,0,55,330,1,0,0,0,57,337,1,0,0,0,59,348,1,0,0,0,61,351,
1,0,0,0,63,359,1,0,0,0,65,372,1,0,0,0,67,413,1,0,0,0,69,433,1,0,0,0,71,436,
1,0,0,0,73,448,1,0,0,0,75,464,1,0,0,0,77,479,1,0,0,0,79,486,1,0,0,0,81,496,
1,0,0,0,83,498,1,0,0,0,85,502,1,0,0,0,87,504,1,0,0,0,89,506,1,0,0,0,91,508,
1,0,0,0,93,94,5,64,0,0,94,95,5,105,0,0,95,96,5,110,0,0,96,97,5,99,0,0,97,
98,5,108,0,0,98,99,5,117,0,0,99,100,5,100,0,0,100,101,5,101,0,0,101,2,1,
0,0,0,102,103,5,59,0,0,103,4,1,0,0,0,104,105,5,58,0,0,105,6,1,0,0,0,106,
107,5,123,0,0,107,8,1,0,0,0,108,109,5,125,0,0,109,10,1,0,0,0,110,111,5,100,
0,0,111,112,5,105,0,0,112,113,5,97,0,0,113,114,5,108,0,0,114,115,5,111,0,
0,115,116,5,103,0,0,116,12,1,0,0,0,117,118,5,114,0,0,118,119,5,111,0,0,119,
120,5,119,0,0,120,14,1,0,0,0,121,122,5,99,0,0,122,123,5,111,0,0,123,124,
5,108,0,0,124,125,5,117,0,0,125,126,5,109,0,0,126,127,5,110,0,0,127,16,1,
0,0,0,128,129,5,98,0,0,129,130,5,111,0,0,130,131,5,120,0,0,131,132,5,101,
0,0,132,133,5,100,0,0,133,134,5,95,0,0,134,135,5,114,0,0,135,136,5,111,0,
0,136,137,5,119,0,0,137,18,1,0,0,0,138,139,5,98,0,0,139,140,5,111,0,0,140,
141,5,120,0,0,141,142,5,101,0,0,142,143,5,100,0,0,143,144,5,95,0,0,144,145,
5,99,0,0,145,146,5,111,0,0,146,147,5,108,0,0,147,148,5,117,0,0,148,149,5,
109,0,0,149,150,5,110,0,0,150,20,1,0,0,0,151,152,5,99,0,0,152,153,5,111,
0,0,153,154,5,110,0,0,154,155,5,99,0,0,155,156,5,97,0,0,156,157,5,116,0,
0,157,158,5,101,0,0,158,159,5,110,0,0,159,160,5,97,0,0,160,161,5,116,0,0,
161,162,5,105,0,0,162,163,5,111,0,0,163,164,5,110,0,0,164,22,1,0,0,0,165,
166,5,112,0,0,166,167,5,97,0,0,167,168,5,114,0,0,168,169,5,97,0,0,169,170,
5,103,0,0,170,171,5,114,0,0,171,172,5,97,0,0,172,173,5,112,0,0,173,174,5,
104,0,0,174,24,1,0,0,0,175,176,5,114,0,0,176,177,5,97,0,0,177,178,5,100,
0,0,178,179,5,105,0,0,179,180,5,111,0,0,180,181,5,95,0,0,181,182,5,114,0,
0,182,183,5,111,0,0,183,184,5,119,0,0,184,26,1,0,0,0,185,186,5,114,0,0,186,
187,5,97,0,0,187,188,5,100,0,0,188,189,5,105,0,0,189,190,5,111,0,0,190,191,
5,95,0,0,191,192,5,99,0,0,192,193,5,111,0,0,193,194,5,108,0,0,194,195,5,
117,0,0,195,196,5,109,0,0,196,197,5,110,0,0,197,28,1,0,0,0,198,199,5,98,
0,0,199,200,5,111,0,0,200,201,5,120,0,0,201,202,5,101,0,0,202,203,5,100,
0,0,203,204,5,95,0,0,204,205,5,114,0,0,205,206,5,97,0,0,206,207,5,100,0,
0,207,208,5,105,0,0,208,209,5,111,0,0,209,210,5,95,0,0,210,211,5,114,0,0,
211,212,5,111,0,0,212,213,5,119,0,0,213,30,1,0,0,0,214,215,5,98,0,0,215,
216,5,111,0,0,216,217,5,120,0,0,217,218,5,101,0,0,218,219,5,100,0,0,219,
220,5,95,0,0,220,221,5,114,0,0,221,222,5,97,0,0,222,223,5,100,0,0,223,224,
5,105,0,0,224,225,5,111,0,0,225,226,5,95,0,0,226,227,5,99,0,0,227,228,5,
111,0,0,228,229,5,108,0,0,229,230,5,117,0,0,230,231,5,109,0,0,231,232,5,
110,0,0,232,32,1,0,0,0,233,234,5,98,0,0,234,235,5,117,0,0,235,236,5,116,
0,0,236,237,5,116,0,0,237,238,5,111,0,0,238,239,5,110,0,0,239,34,1,0,0,0,
240,241,5,101,0,0,241,242,5,100,0,0,242,243,5,105,0,0,243,244,5,116,0,0,
244,245,5,95,0,0,245,246,5,98,0,0,246,247,5,111,0,0,247,248,5,120,0,0,248,
36,1,0,0,0,249,250,5,105,0,0,250,251,5,109,0,0,251,252,5,97,0,0,252,253,
5,103,0,0,253,254,5,101,0,0,254,38,1,0,0,0,255,256,5,105,0,0,256,257,5,109,
0,0,257,258,5,97,0,0,258,259,5,103,0,0,259,260,5,101,0,0,260,261,5,95,0,
0,261,262,5,98,0,0,262,263,5,117,0,0,263,264,5,116,0,0,264,265,5,116,0,0,
265,266,5,111,0,0,266,267,5,110,0,0,267,40,1,0,0,0,268,269,5,108,0,0,269,
270,5,105,0,0,270,271,5,115,0,0,271,272,5,116,0,0,272,273,5,95,0,0,273,274,
5,98,0,0,274,275,5,111,0,0,275,276,5,120,0,0,276,42,1,0,0,0,277,278,5,112,
0,0,278,279,5,111,0,0,279,280,5,112,0,0,280,281,5,117,0,0,281,282,5,112,
0,0,282,283,5,95,0,0,283,284,5,108,0,0,284,285,5,105,0,0,285,286,5,115,0,
0,286,287,5,116,0,0,287,44,1,0,0,0,288,289,5,114,0,0,289,290,5,97,0,0,290,
291,5,100,0,0,291,292,5,105,0,0,292,293,5,111,0,0,293,294,5,95,0,0,294,295,
5,98,0,0,295,296,5,117,0,0,296,297,5,116,0,0,297,298,5,116,0,0,298,299,5,
111,0,0,299,300,5,110,0,0,300,46,1,0,0,0,301,302,5,115,0,0,302,303,5,108,
0,0,303,304,5,105,0,0,304,305,5,100,0,0,305,306,5,101,0,0,306,307,5,114,
0,0,307,48,1,0,0,0,308,309,5,115,0,0,309,310,5,112,0,0,310,311,5,97,0,0,
311,312,5,99,0,0,312,313,5,101,0,0,313,314,5,114,0,0,314,50,1,0,0,0,315,
316,5,116,0,0,316,317,5,101,0,0,317,318,5,120,0,0,318,319,5,116,0,0,319,
52,1,0,0,0,320,321,5,116,0,0,321,322,5,101,0,0,322,323,5,120,0,0,323,324,
5,116,0,0,324,325,5,95,0,0,325,326,5,112,0,0,326,327,5,97,0,0,327,328,5,
114,0,0,328,329,5,116,0,0,329,54,1,0,0,0,330,331,5,116,0,0,331,332,5,111,
0,0,332,333,5,103,0,0,333,334,5,103,0,0,334,335,5,108,0,0,335,336,5,101,
0,0,336,56,1,0,0,0,337,338,5,61,0,0,338,58,1,0,0,0,339,340,5,116,0,0,340,
341,5,114,0,0,341,342,5,117,0,0,342,349,5,101,0,0,343,344,5,102,0,0,344,
345,5,97,0,0,345,346,5,108,0,0,346,347,5,115,0,0,347,349,5,101,0,0,348,339,
1,0,0,0,348,343,1,0,0,0,349,60,1,0,0,0,350,352,5,45,0,0,351,350,1,0,0,0,
351,352,1,0,0,0,352,354,1,0,0,0,353,355,3,91,45,0,354,353,1,0,0,0,355,356,
1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,62,1,0,0,0,358,360,5,45,0,0,
359,358,1,0,0,0,359,360,1,0,0,0,360,362,1,0,0,0,361,363,3,91,45,0,362,361,
1,0,0,0,363,364,1,0,0,0,364,362,1,0,0,0,364,365,1,0,0,0,365,366,1,0,0,0,
366,368,5,46,0,0,367,369,3,91,45,0,368,367,1,0,0,0,369,370,1,0,0,0,370,368,
1,0,0,0,370,371,1,0,0,0,371,64,1,0,0,0,372,376,5,34,0,0,373,375,3,81,40,
0,374,373,1,0,0,0,375,378,1,0,0,0,376,374,1,0,0,0,376,377,1,0,0,0,377,379,
1,0,0,0,378,376,1,0,0,0,379,380,5,34,0,0,380,66,1,0,0,0,381,382,5,108,0,
0,382,383,5,101,0,0,383,384,5,102,0,0,384,414,5,116,0,0,385,386,5,114,0,
0,386,387,5,105,0,0,387,388,5,103,0,0,388,389,5,104,0,0,389,414,5,116,0,
0,390,391,5,116,0,0,391,392,5,111,0,0,392,414,5,112,0,0,393,394,5,98,0,0,
394,395,5,111,0,0,395,396,5,116,0,0,396,397,5,116,0,0,397,398,5,111,0,0,
398,414,5,109,0,0,399,400,5,99,0,0,400,401,5,101,0,0,401,402,5,110,0,0,402,
403,5,116,0,0,403,404,5,101,0,0,404,405,5,114,0,0,405,406,5,101,0,0,406,
414,5,100,0,0,407,408,5,102,0,0,408,409,5,105,0,0,409,410,5,108,0,0,410,
411,5,108,0,0,411,412,5,101,0,0,412,414,5,100,0,0,413,381,1,0,0,0,413,385,
1,0,0,0,413,390,1,0,0,0,413,393,1,0,0,0,413,399,1,0,0,0,413,407,1,0,0,0,
414,68,1,0,0,0,415,416,5,104,0,0,416,417,5,111,0,0,417,418,5,114,0,0,418,
419,5,105,0,0,419,420,5,122,0,0,420,421,5,111,0,0,421,422,5,110,0,0,422,
423,5,116,0,0,423,424,5,97,0,0,424,434,5,108,0,0,425,426,5,118,0,0,426,427,
5,101,0,0,427,428,5,114,0,0,428,429,5,116,0,0,429,430,5,105,0,0,430,431,
5,99,0,0,431,432,5,97,0,0,432,434,5,108,0,0,433,415,1,0,0,0,433,425,1,0,
0,0,434,70,1,0,0,0,435,437,3,85,42,0,436,435,1,0,0,0,437,438,1,0,0,0,438,
436,1,0,0,0,438,439,1,0,0,0,439,445,1,0,0,0,440,444,3,91,45,0,441,444,3,
85,42,0,442,444,5,95,0,0,443,440,1,0,0,0,443,441,1,0,0,0,443,442,1,0,0,0,
444,447,1,0,0,0,445,443,1,0,0,0,445,446,1,0,0,0,446,72,1,0,0,0,447,445,1,
0,0,0,448,449,5,47,0,0,449,450,5,42,0,0,450,454,1,0,0,0,451,453,9,0,0,0,
452,451,1,0,0,0,453,456,1,0,0,0,454,455,1,0,0,0,454,452,1,0,0,0,455,457,
1,0,0,0,456,454,1,0,0,0,457,458,5,42,0,0,458,459,5,47,0,0,459,460,1,0,0,
0,460,461,6,36,0,0,461,74,1,0,0,0,462,463,5,47,0,0,463,465,5,47,0,0,464,
462,1,0,0,0,465,466,1,0,0,0,466,464,1,0,0,0,466,467,1,0,0,0,467,471,1,0,
0,0,468,470,9,0,0,0,469,468,1,0,0,0,470,473,1,0,0,0,471,472,1,0,0,0,471,
469,1,0,0,0,472,474,1,0,0,0,473,471,1,0,0,0,474,475,3,77,38,0,475,476,1,
0,0,0,476,477,6,37,0,0,477,76,1,0,0,0,478,480,5,13,0,0,479,478,1,0,0,0,479,
480,1,0,0,0,480,481,1,0,0,0,481,482,5,10,0,0,482,483,1,0,0,0,483,484,6,38,
0,0,484,78,1,0,0,0,485,487,7,0,0,0,486,485,1,0,0,0,487,488,1,0,0,0,488,486,
1,0,0,0,488,489,1,0,0,0,489,490,1,0,0,0,490,491,6,39,0,0,491,80,1,0,0,0,
492,497,8,1,0,0,493,494,5,92,0,0,494,497,3,83,41,0,495,497,3,77,38,0,496,
492,1,0,0,0,496,493,1,0,0,0,496,495,1,0,0,0,497,82,1,0,0,0,498,499,7,2,0,
0,499,84,1,0,0,0,500,503,3,87,43,0,501,503,3,89,44,0,502,500,1,0,0,0,502,
501,1,0,0,0,503,86,1,0,0,0,504,505,7,3,0,0,505,88,1,0,0,0,506,507,7,4,0,
0,507,90,1,0,0,0,508,509,7,5,0,0,509,92,1,0,0,0,20,0,348,351,356,359,364,
370,376,413,433,438,443,445,454,466,471,479,488,496,502,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class VeDclLexer extends antlr4.Lexer {

    static grammarFileName = "VeDcl.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'@include'", "';'", "':'", "'{'", "'}'", 
                         "'dialog'", "'row'", "'column'", "'boxed_row'", 
                         "'boxed_column'", "'concatenation'", "'paragraph'", 
                         "'radio_row'", "'radio_column'", "'boxed_radio_row'", 
                         "'boxed_radio_column'", "'button'", "'edit_box'", 
                         "'image'", "'image_button'", "'list_box'", "'popup_list'", 
                         "'radio_button'", "'slider'", "'spacer'", "'text'", 
                         "'text_part'", "'toggle'", "'='" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "BOOL", "INT", 
                          "REAL", "STR", "ALIGN", "LAYOUT", "ID", "COMMENT", 
                          "LINE_COMMENT", "NEWLINE", "WHITESPACE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "BOOL", "INT", 
                      "REAL", "STR", "ALIGN", "LAYOUT", "ID", "COMMENT", 
                      "LINE_COMMENT", "NEWLINE", "WHITESPACE", "CHAR", "ESCAPE_SEQ", 
                      "LETTER", "LOWER_LETTER", "UPPER_LETTER", "DIGIT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

VeDclLexer.EOF = antlr4.Token.EOF;
VeDclLexer.T__0 = 1;
VeDclLexer.T__1 = 2;
VeDclLexer.T__2 = 3;
VeDclLexer.T__3 = 4;
VeDclLexer.T__4 = 5;
VeDclLexer.T__5 = 6;
VeDclLexer.T__6 = 7;
VeDclLexer.T__7 = 8;
VeDclLexer.T__8 = 9;
VeDclLexer.T__9 = 10;
VeDclLexer.T__10 = 11;
VeDclLexer.T__11 = 12;
VeDclLexer.T__12 = 13;
VeDclLexer.T__13 = 14;
VeDclLexer.T__14 = 15;
VeDclLexer.T__15 = 16;
VeDclLexer.T__16 = 17;
VeDclLexer.T__17 = 18;
VeDclLexer.T__18 = 19;
VeDclLexer.T__19 = 20;
VeDclLexer.T__20 = 21;
VeDclLexer.T__21 = 22;
VeDclLexer.T__22 = 23;
VeDclLexer.T__23 = 24;
VeDclLexer.T__24 = 25;
VeDclLexer.T__25 = 26;
VeDclLexer.T__26 = 27;
VeDclLexer.T__27 = 28;
VeDclLexer.T__28 = 29;
VeDclLexer.BOOL = 30;
VeDclLexer.INT = 31;
VeDclLexer.REAL = 32;
VeDclLexer.STR = 33;
VeDclLexer.ALIGN = 34;
VeDclLexer.LAYOUT = 35;
VeDclLexer.ID = 36;
VeDclLexer.COMMENT = 37;
VeDclLexer.LINE_COMMENT = 38;
VeDclLexer.NEWLINE = 39;
VeDclLexer.WHITESPACE = 40;



