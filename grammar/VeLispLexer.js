// Generated from grammar/VeLisp.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,28,353,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,
5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,
8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,
11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,
1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,
16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,
1,19,1,20,3,20,212,8,20,1,20,4,20,215,8,20,11,20,12,20,216,1,21,3,21,220,
8,21,1,21,4,21,223,8,21,11,21,12,21,224,1,21,1,21,4,21,229,8,21,11,21,12,
21,230,1,22,1,22,5,22,235,8,22,10,22,12,22,238,9,22,1,22,1,22,1,23,4,23,
243,8,23,11,23,12,23,244,1,24,1,24,1,24,1,24,5,24,251,8,24,10,24,12,24,254,
9,24,1,24,1,24,1,24,1,24,1,24,1,25,4,25,262,8,25,11,25,12,25,263,1,25,5,
25,267,8,25,10,25,12,25,270,9,25,1,25,1,25,1,25,1,25,1,26,3,26,277,8,26,
1,26,1,26,1,26,1,26,1,27,4,27,284,8,27,11,27,12,27,285,1,27,1,27,1,28,1,
28,1,28,1,28,3,28,294,8,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,
1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,
40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,
1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,
55,1,55,1,56,1,56,1,57,1,57,2,252,268,0,58,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,0,59,0,61,0,63,0,65,
0,67,0,69,0,71,0,73,0,75,0,77,0,79,0,81,0,83,0,85,0,87,0,89,0,91,0,93,0,
95,0,97,0,99,0,101,0,103,0,105,0,107,0,109,0,111,0,113,0,115,0,1,0,32,10,
0,33,33,36,37,42,43,45,45,47,58,60,62,65,90,95,95,97,122,126,126,2,0,9,9,
32,32,4,0,10,10,13,13,34,34,92,92,7,0,34,34,48,48,92,92,101,101,110,110,
114,114,116,116,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,
100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,
104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,
108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,
112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,
116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,
120,120,2,0,89,89,121,121,2,0,90,90,122,122,2,0,65,90,97,122,1,0,48,57,336,
0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,1,117,
1,0,0,0,3,119,1,0,0,0,5,121,1,0,0,0,7,125,1,0,0,0,9,127,1,0,0,0,11,129,1,
0,0,0,13,133,1,0,0,0,15,138,1,0,0,0,17,144,1,0,0,0,19,152,1,0,0,0,21,161,
1,0,0,0,23,164,1,0,0,0,25,171,1,0,0,0,27,174,1,0,0,0,29,180,1,0,0,0,31,186,
1,0,0,0,33,193,1,0,0,0,35,198,1,0,0,0,37,204,1,0,0,0,39,208,1,0,0,0,41,211,
1,0,0,0,43,219,1,0,0,0,45,232,1,0,0,0,47,242,1,0,0,0,49,246,1,0,0,0,51,261,
1,0,0,0,53,276,1,0,0,0,55,283,1,0,0,0,57,293,1,0,0,0,59,295,1,0,0,0,61,297,
1,0,0,0,63,299,1,0,0,0,65,301,1,0,0,0,67,303,1,0,0,0,69,305,1,0,0,0,71,307,
1,0,0,0,73,309,1,0,0,0,75,311,1,0,0,0,77,313,1,0,0,0,79,315,1,0,0,0,81,317,
1,0,0,0,83,319,1,0,0,0,85,321,1,0,0,0,87,323,1,0,0,0,89,325,1,0,0,0,91,327,
1,0,0,0,93,329,1,0,0,0,95,331,1,0,0,0,97,333,1,0,0,0,99,335,1,0,0,0,101,
337,1,0,0,0,103,339,1,0,0,0,105,341,1,0,0,0,107,343,1,0,0,0,109,345,1,0,
0,0,111,347,1,0,0,0,113,349,1,0,0,0,115,351,1,0,0,0,117,118,5,40,0,0,118,
2,1,0,0,0,119,120,5,41,0,0,120,4,1,0,0,0,121,122,5,32,0,0,122,123,5,47,0,
0,123,124,5,32,0,0,124,6,1,0,0,0,125,126,5,46,0,0,126,8,1,0,0,0,127,128,
5,39,0,0,128,10,1,0,0,0,129,130,3,61,30,0,130,131,3,87,43,0,131,132,3,67,
33,0,132,12,1,0,0,0,133,134,3,65,32,0,134,135,3,89,44,0,135,136,3,87,43,
0,136,137,3,67,33,0,137,14,1,0,0,0,138,139,3,67,33,0,139,140,3,69,34,0,140,
141,3,71,35,0,141,142,3,101,50,0,142,143,3,87,43,0,143,16,1,0,0,0,144,145,
3,71,35,0,145,146,3,89,44,0,146,147,3,95,47,0,147,148,3,69,34,0,148,149,
3,61,30,0,149,150,3,65,32,0,150,151,3,75,37,0,151,18,1,0,0,0,152,153,3,71,
35,0,153,154,3,101,50,0,154,155,3,87,43,0,155,156,3,65,32,0,156,157,3,99,
49,0,157,158,3,77,38,0,158,159,3,89,44,0,159,160,3,87,43,0,160,20,1,0,0,
0,161,162,3,77,38,0,162,163,3,71,35,0,163,22,1,0,0,0,164,165,3,83,41,0,165,
166,3,61,30,0,166,167,3,85,42,0,167,168,3,63,31,0,168,169,3,67,33,0,169,
170,3,61,30,0,170,24,1,0,0,0,171,172,3,89,44,0,172,173,3,95,47,0,173,26,
1,0,0,0,174,175,3,91,45,0,175,176,3,95,47,0,176,177,3,89,44,0,177,178,3,
73,36,0,178,179,3,87,43,0,179,28,1,0,0,0,180,181,3,93,46,0,181,182,3,101,
50,0,182,183,3,89,44,0,183,184,3,99,49,0,184,185,3,69,34,0,185,30,1,0,0,
0,186,187,3,95,47,0,187,188,3,69,34,0,188,189,3,91,45,0,189,190,3,69,34,
0,190,191,3,61,30,0,191,192,3,99,49,0,192,32,1,0,0,0,193,194,3,97,48,0,194,
195,3,69,34,0,195,196,3,99,49,0,196,197,3,93,46,0,197,34,1,0,0,0,198,199,
3,105,52,0,199,200,3,75,37,0,200,201,3,77,38,0,201,202,3,83,41,0,202,203,
3,69,34,0,203,36,1,0,0,0,204,205,3,87,43,0,205,206,3,77,38,0,206,207,3,83,
41,0,207,38,1,0,0,0,208,209,3,99,49,0,209,40,1,0,0,0,210,212,5,45,0,0,211,
210,1,0,0,0,211,212,1,0,0,0,212,214,1,0,0,0,213,215,3,115,57,0,214,213,1,
0,0,0,215,216,1,0,0,0,216,214,1,0,0,0,216,217,1,0,0,0,217,42,1,0,0,0,218,
220,5,45,0,0,219,218,1,0,0,0,219,220,1,0,0,0,220,222,1,0,0,0,221,223,3,115,
57,0,222,221,1,0,0,0,223,224,1,0,0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,
226,1,0,0,0,226,228,5,46,0,0,227,229,3,115,57,0,228,227,1,0,0,0,229,230,
1,0,0,0,230,228,1,0,0,0,230,231,1,0,0,0,231,44,1,0,0,0,232,236,5,34,0,0,
233,235,3,57,28,0,234,233,1,0,0,0,235,238,1,0,0,0,236,234,1,0,0,0,236,237,
1,0,0,0,237,239,1,0,0,0,238,236,1,0,0,0,239,240,5,34,0,0,240,46,1,0,0,0,
241,243,7,0,0,0,242,241,1,0,0,0,243,244,1,0,0,0,244,242,1,0,0,0,244,245,
1,0,0,0,245,48,1,0,0,0,246,247,5,59,0,0,247,248,5,124,0,0,248,252,1,0,0,
0,249,251,9,0,0,0,250,249,1,0,0,0,251,254,1,0,0,0,252,253,1,0,0,0,252,250,
1,0,0,0,253,255,1,0,0,0,254,252,1,0,0,0,255,256,5,124,0,0,256,257,5,59,0,
0,257,258,1,0,0,0,258,259,6,24,0,0,259,50,1,0,0,0,260,262,5,59,0,0,261,260,
1,0,0,0,262,263,1,0,0,0,263,261,1,0,0,0,263,264,1,0,0,0,264,268,1,0,0,0,
265,267,9,0,0,0,266,265,1,0,0,0,267,270,1,0,0,0,268,269,1,0,0,0,268,266,
1,0,0,0,269,271,1,0,0,0,270,268,1,0,0,0,271,272,3,53,26,0,272,273,1,0,0,
0,273,274,6,25,0,0,274,52,1,0,0,0,275,277,5,13,0,0,276,275,1,0,0,0,276,277,
1,0,0,0,277,278,1,0,0,0,278,279,5,10,0,0,279,280,1,0,0,0,280,281,6,26,0,
0,281,54,1,0,0,0,282,284,7,1,0,0,283,282,1,0,0,0,284,285,1,0,0,0,285,283,
1,0,0,0,285,286,1,0,0,0,286,287,1,0,0,0,287,288,6,27,0,0,288,56,1,0,0,0,
289,294,8,2,0,0,290,291,5,92,0,0,291,294,3,59,29,0,292,294,3,53,26,0,293,
289,1,0,0,0,293,290,1,0,0,0,293,292,1,0,0,0,294,58,1,0,0,0,295,296,7,3,0,
0,296,60,1,0,0,0,297,298,7,4,0,0,298,62,1,0,0,0,299,300,7,5,0,0,300,64,1,
0,0,0,301,302,7,6,0,0,302,66,1,0,0,0,303,304,7,7,0,0,304,68,1,0,0,0,305,
306,7,8,0,0,306,70,1,0,0,0,307,308,7,9,0,0,308,72,1,0,0,0,309,310,7,10,0,
0,310,74,1,0,0,0,311,312,7,11,0,0,312,76,1,0,0,0,313,314,7,12,0,0,314,78,
1,0,0,0,315,316,7,13,0,0,316,80,1,0,0,0,317,318,7,14,0,0,318,82,1,0,0,0,
319,320,7,15,0,0,320,84,1,0,0,0,321,322,7,16,0,0,322,86,1,0,0,0,323,324,
7,17,0,0,324,88,1,0,0,0,325,326,7,18,0,0,326,90,1,0,0,0,327,328,7,19,0,0,
328,92,1,0,0,0,329,330,7,20,0,0,330,94,1,0,0,0,331,332,7,21,0,0,332,96,1,
0,0,0,333,334,7,22,0,0,334,98,1,0,0,0,335,336,7,23,0,0,336,100,1,0,0,0,337,
338,7,24,0,0,338,102,1,0,0,0,339,340,7,25,0,0,340,104,1,0,0,0,341,342,7,
26,0,0,342,106,1,0,0,0,343,344,7,27,0,0,344,108,1,0,0,0,345,346,7,28,0,0,
346,110,1,0,0,0,347,348,7,29,0,0,348,112,1,0,0,0,349,350,7,30,0,0,350,114,
1,0,0,0,351,352,7,31,0,0,352,116,1,0,0,0,14,0,211,216,219,224,230,236,244,
252,263,268,276,285,293,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class VeLispLexer extends antlr4.Lexer {

    static grammarFileName = "VeLisp.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'", "' / '", "'.'", "'''" ];
	static symbolicNames = [ null, null, null, null, null, null, "AND", "COND", 
                          "DEFUN", "FOREACH", "FUNCTION", "IF", "LAMBDA", 
                          "OR", "PROGN", "QUOTE", "REPEAT", "SETQ", "WHILE", 
                          "NIL", "TRU", "INT", "REAL", "STR", "ID", "COMMENT", 
                          "LINE_COMMENT", "NEWLINE", "WHITESPACE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "AND", "COND", 
                      "DEFUN", "FOREACH", "FUNCTION", "IF", "LAMBDA", "OR", 
                      "PROGN", "QUOTE", "REPEAT", "SETQ", "WHILE", "NIL", 
                      "TRU", "INT", "REAL", "STR", "ID", "COMMENT", "LINE_COMMENT", 
                      "NEWLINE", "WHITESPACE", "CHAR", "ESCAPE_SEQ", "A", 
                      "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                      "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
                      "V", "W", "X", "Y", "Z", "LETTER", "DIGIT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

VeLispLexer.EOF = antlr4.Token.EOF;
VeLispLexer.T__0 = 1;
VeLispLexer.T__1 = 2;
VeLispLexer.T__2 = 3;
VeLispLexer.T__3 = 4;
VeLispLexer.T__4 = 5;
VeLispLexer.AND = 6;
VeLispLexer.COND = 7;
VeLispLexer.DEFUN = 8;
VeLispLexer.FOREACH = 9;
VeLispLexer.FUNCTION = 10;
VeLispLexer.IF = 11;
VeLispLexer.LAMBDA = 12;
VeLispLexer.OR = 13;
VeLispLexer.PROGN = 14;
VeLispLexer.QUOTE = 15;
VeLispLexer.REPEAT = 16;
VeLispLexer.SETQ = 17;
VeLispLexer.WHILE = 18;
VeLispLexer.NIL = 19;
VeLispLexer.TRU = 20;
VeLispLexer.INT = 21;
VeLispLexer.REAL = 22;
VeLispLexer.STR = 23;
VeLispLexer.ID = 24;
VeLispLexer.COMMENT = 25;
VeLispLexer.LINE_COMMENT = 26;
VeLispLexer.NEWLINE = 27;
VeLispLexer.WHITESPACE = 28;



